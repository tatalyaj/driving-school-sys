<Window x:Class="PLWPF.TestWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:BE="clr-namespace:BE;assembly=BE" 
        xmlns:local="clr-namespace:PLWPF"
        mc:Ignorable="d"
        Title="TestWindow" Height="360.538" Width="534.156" Loaded="Window_Loaded_1">
    <Window.Resources>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Margin="0,0,0.2,3.8">
                            <Ellipse Fill="Transparent"
                             Stroke="black"/>
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <CollectionViewSource x:Key="TestViewSource" d:DesignSource="{d:DesignInstance {x:Type BE:Test} , CreateList=True}" />

    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="images/Test.jpg"/>
    </Window.Background>
    <Grid Margin="0,0,2,0">


        <TabControl Background="Transparent" Margin="0,10,0,0" RenderTransformOrigin="0.583,0.51">
            <TabItem Header="Add">
                <Grid Margin="0,0,-0.2,31.6">
                    <Grid x:Name="Addgrid" VerticalAlignment="Top" Margin="1,0,0,-118" HorizontalAlignment="Left"  Height="308" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Trainee ID:   " Grid.Row="0" Grid.Column="0" Margin="5,5,109,26" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        <ComboBox x:Name="idTraineeComboBox" Width="90" VerticalAlignment="Center" Text="{Binding StudentID, Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnExceptions=True}" Grid.Row="0" Margin="3,9,0,0.2" Height="22" HorizontalAlignment="Left" Grid.Column="1" />
                        <TextBlock Text="Tester ID:   " Grid.Row="1" Grid.Column="0" Margin="5,5,0,29" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        <ComboBox x:Name="idTesterComboBox" Width="90" VerticalAlignment="Center" Text="{Binding TesterID, Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnExceptions=True}" Grid.Row="1" Margin="3,9,0,0.2" Height="22" HorizontalAlignment="Left" Grid.Column="1" />
                        <TextBlock Text="Date of test:   " Grid.Row="2" Grid.Column="0" Margin="5"/>
                        <DatePicker x:Name="dateOfTest" VerticalAlignment="Center"  Grid.Row="2" Margin="5" HorizontalAlignment="Left" Grid.Column="1" SelectedDate="{Binding TestDayNHour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                        <TextBlock Text="Car type:   " Grid.Row="3" Grid.Column="0" Margin="5"/>
                        <ComboBox x:Name="carTypeComboBox" Width="90" VerticalAlignment="Center" SelectedItem="{Binding CarTestedRn}" Grid.Row="3" Margin="3,4.6,0,26.2" Height="22" HorizontalAlignment="Left" Grid.Column="1" Grid.RowSpan="2"/>

                        <TextBlock Text="Test Adress:   " Grid.Row="4" Grid.Column="0" Margin="0,3.8,10,5.6"/>
                        <TextBox Grid.Row="4"  Grid.Column="1" MaxLength="9" Height="15" Width="70" Margin="5"/>



                    </Grid>
                    <Button Style="{StaticResource ButtonStyle}" Name="Add" Content="Add" FontSize="15" IsEnabled="True" HorizontalAlignment="Left" Margin="374,228,0,0" VerticalAlignment="Top" Width="103"  Height="24" Click="Add_Click" RenderTransformOrigin="0.566,-3.126"/>
                </Grid>
            </TabItem>
            <TabItem Header="Update">
                <Grid Margin="0,0,0,-22">
                    <Grid x:Name="Updategrid"  HorizontalAlignment="Left" VerticalAlignment="Top" Height="253" Width="332">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Trainee ID:   " Grid.Row="0" Grid.Column="0" Margin="5" Grid.ColumnSpan="3"/>
                        <ComboBox x:Name="updateTraineeComboBox" Width="90" VerticalAlignment="Center" Text="{Binding StudentID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Margin="2.6,5,0,6" Height="21" HorizontalAlignment="Left" Grid.Column="1" />
                        <Label Content="Test To Update:" Grid.Column="0" HorizontalAlignment="Left" Margin="5,10.6,0,-35.8" Grid.Row="7" VerticalAlignment="Center"/>
                        <ComboBox x:Name="testNumComboBox" Grid.Column="1" DisplayMemberPath="NumOfTest" HorizontalAlignment="Left" Height="Auto" ItemsSource="{Binding }" Margin="20.6,11.4,0,-32.8" Grid.Row="7" VerticalAlignment="Top" Width="120"  Grid.ColumnSpan="2" SelectionChanged="testNumComboBox_SelectionChanged"/>
                        <TextBlock Text="Tester ID:   " Grid.Row="1" Grid.Column="0" Margin="5"/>
                        <ComboBox x:Name="updateTesterComboBox" Width="90" VerticalAlignment="Center" Text="{Binding TesterID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="4.6,3.8,0,5.4" Height="18" HorizontalAlignment="Left" Grid.Column="1" />
                        <TextBlock Text="Date of test:   " Grid.Row="2" Grid.Column="0" Margin="5" Grid.ColumnSpan="3"/>
                        <DatePicker x:Name="TestDay" VerticalAlignment="Center" SelectedDate="{Binding TestDayNHour, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="5,6,0,10" HorizontalAlignment="Left" Grid.Column="1" Width="85"/>
                        <Label Content="Past Or Failed:" Grid.Column="0" HorizontalAlignment="Left" Margin="5,41.6,0,-66" Grid.Row="7" VerticalAlignment="Center"/>
                        <CheckBox x:Name="passedOrFailedComboBox"  HorizontalAlignment="Left" Height="Auto" IsChecked="{Binding PastOrFailed, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True}"  Margin="110,52.6,0,-65.4" Grid.Row="7" VerticalAlignment="Top" Width="120"  Grid.ColumnSpan="3"/>
                        <TextBlock Text="Car type:   " Grid.Row="3" Grid.Column="0" Margin="5" Grid.ColumnSpan="3"/>
                        <ComboBox x:Name="carTypeComboBox1" Width="90" VerticalAlignment="Center" SelectedItem="{Binding CarTestedRn}" Grid.Row="3" Margin="2.6,10,0,30.4" Height="22" HorizontalAlignment="Left" Grid.Column="1" Grid.RowSpan="2"/>
                        <TextBlock Text="Test Adress:   " Grid.Row="4" Grid.Column="0" Margin="0,2.8,10,6.8" Grid.ColumnSpan="3"/>
                        <TextBox Grid.Row="4"  Grid.Column="1" MaxLength="9" Height="15" Width="70" Margin="20,5,20,9"/>



                        <Expander Header="Succsesful Criteria: " Grid.Row="0" Grid.Column="2"  Margin="6,10,-110,10" Grid.RowSpan="4">
                            <Expander.Content>
                                <Grid ShowGridLines="True" Height="129" Margin="0,0,-36,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="14*"/>
                                        <ColumnDefinition Width="235*"/>
                                    </Grid.ColumnDefinitions>

                                    <Label Content="Distance maintaine" HorizontalAlignment="Left" Margin="12.649,74,0,29" VerticalAlignment="Center" Height="26" Width="115" Grid.Column="1"/>
                                    <CheckBox x:Name="DMcheckBox" Content="" HorizontalAlignment="Left" IsChecked="{Binding DistanceMaintainance, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="138.4,0,0,29" VerticalAlignment="Bottom" Height="14" Width="16" RenderTransformOrigin="2.15,-4.895" Grid.Column="1"/>
                                    <Label Content="Reverse parking" HorizontalAlignment="Left" Margin="12.649,49,0,54" Grid.Row="0" VerticalAlignment="Center" Height="26" Width="102" RenderTransformOrigin="0.644,1.317" Grid.Column="1"/>
                                    <CheckBox x:Name="RPcheckBox" Content="" HorizontalAlignment="Left" IsChecked="{Binding ReverseParking, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="119.649,0,0,60" VerticalAlignment="Bottom" Height="14" Width="20" RenderTransformOrigin="2.28,-2.854" Grid.Column="1"/>
                                    <Label Content="Mirror Observation" HorizontalAlignment="Left" Margin="12.649,0,0,103" Grid.Row="0" VerticalAlignment="Center" Height="26" Width="115" Grid.Column="1"/>
                                    <CheckBox x:Name="MOcheckbox" Content="" HorizontalAlignment="Left" IsChecked="{Binding MirrorsObservation, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="127.649,0,0,105" VerticalAlignment="Bottom" Height="14" Width="20" RenderTransformOrigin="1.89,-3.968" Grid.Column="1"/>
                                    <Label Content="Signal" HorizontalAlignment="Left" Margin="12.649,101,0,2" Grid.Row="0" VerticalAlignment="Center" Height="26" Width="48" Grid.Column="1"/>
                                    <CheckBox x:Name="SignalCheckBox" Content="" HorizontalAlignment="Left" IsChecked="{Binding Signal, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="65.649,0,0,10" VerticalAlignment="Bottom" Height="14" Width="20" RenderTransformOrigin="0.306,-1.467" Grid.Column="1"/>
                                    <Label Content="Stearing Control" Margin="12.649,26,120,77" Grid.Row="0" VerticalAlignment="Center" Height="26" Grid.Column="1"/>
                                    <CheckBox x:Name="SCcheckBox" Content="" HorizontalAlignment="Left" IsChecked="{Binding StearingControl, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="119.649,0,0,84" VerticalAlignment="Bottom" Height="14" Width="20" RenderTransformOrigin="1.15,2.014" Grid.Column="1"/>


                                </Grid>
                            </Expander.Content>
                        </Expander>

                    </Grid>
                    <Button Style="{StaticResource ButtonStyle}"  Name="Update" Content="Update" FontSize="15" IsEnabled="False" HorizontalAlignment="Left" Margin="385,234,0,0" VerticalAlignment="Top" Width="102"  Height="27" Click="Update_Click"/>


                </Grid>
            </TabItem>
            <TabItem Header="Remove">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="61*"/>
                        <ColumnDefinition Width="344*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Please enter your ID to remove?"  FontSize="15" HorizontalAlignment="Left" Margin="56,25,0,0" VerticalAlignment="Top" Height="32" Width="283" Grid.ColumnSpan="2"/>
                    <ComboBox Name="removeTest" HorizontalAlignment="Left" Margin="76.989,91,0,0" VerticalAlignment="Top" Width="228" Grid.Column="1" ItemsSource="{Binding}"/>
                    <Button Style="{StaticResource ButtonStyle}" Name="Remove" Content="Remove" HorizontalAlignment="Left" Margin="158.6,201,0,0" VerticalAlignment="Top" FontSize="15" Width="102"  Height="27" Grid.Column="1" Click="Remove_Click" />
                    <Label Content=" Test Number:" HorizontalAlignment="Left" Margin="10,88,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2" Width="124"/>

                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>



